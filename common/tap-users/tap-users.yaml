#@ load("@ytt:data", "data")
#@ for user in data.values.users:
---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ user.name
  labels:
    role: tap-developer
---
apiVersion: secretgen.carvel.dev/v1alpha1
kind: SecretImport
metadata:
  name: tap-registry
  namespace: #@ user.name
spec:
  fromNamespace: tap-install
---
apiVersion: secretgen.carvel.dev/v1alpha1
kind: SecretImport
metadata:
  name: registry-credentials
  namespace: #@ user.name
spec:
  fromNamespace: build-service
---
apiVersion: v1
kind: Secret
metadata:
  name: git-ssh
  namespace: #@ user.name
  annotations:
    tekton.dev/git-0: github.com
type: kubernetes.io/ssh-auth
stringData:
  ssh-privatekey: ðŸ”‘
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: #@ data.values.service_account
  namespace: #@ user.name
secrets:
- name: registry-credentials
- name: git-ssh
imagePullSecrets:
- name: registry-credentials
- name: tap-registry
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: #@ "{}-permit-deliverable".format(data.values.service_account)
  namespace: #@ user.name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deliverable
subjects:
- kind: ServiceAccount
  name: #@ data.values.service_account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: #@ "{}-permit-workload".format(data.values.service_account)
  namespace: #@ user.name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: workload
subjects:
- kind: ServiceAccount
  name: #@ data.values.service_account
#@ for clusterrole in user.clusterroles:
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: #@ "{}-permit-{}".format(user.name, clusterrole)
  namespace: #@ user.name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: #@ clusterrole
subjects:
- kind: User
  name: #@ user.email
#@ end
#@ end