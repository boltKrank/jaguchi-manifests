#@ load("@ytt:data", "data")
#@ for user in data.values.users:
---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ user.name
---
apiVersion: v1
kind: Secret
metadata:
  name: tap-registry
  namespace: #@ user.name
  annotations:
    secretgen.carvel.dev/image-pull-secret: ""
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: e30K
---
apiVersion: v1
kind: Secret
metadata:
  name: git-ssh
  namespace: #@ user.name
type: kubernetes.io/ssh-auth
data:
  ssh-privatekey: ""
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: #@ data.values.service_account
  namespace: #@ user.name
secrets:
#! - name: registry-credentials
- name: git-ssh
imagePullSecrets:
#! - name: registry-credentials
- name: tap-registry
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: #@ "{}-permit-deliverable".format(data.values.service_account)
  namespace: #@ user.name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deliverable
subjects:
- kind: ServiceAccount
  name: #@ data.values.service_account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: #@ "{}-permit-workload".format(data.values.service_account)
  namespace: #@ user.name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: workload
subjects:
- kind: ServiceAccount
  name: #@ data.values.service_account
#@ for role in user.roles:
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: #@ "{}-permit-{}".format(user.name, role)
  namespace: #@ user.name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: #@ role
subjects:
- kind: User
  name: #@ user.email
#@ end
#@ end